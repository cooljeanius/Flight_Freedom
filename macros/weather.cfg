#textdomain wesnoth

#define RAIN_TODS
dawn_rain,morning_rain,midday_rain,afternoon_rain,dusk_rain,first_watch_rain,midnight_rain,second_watch_rain,spring_rain,summer_rain,autumn_rain,winter_rain#enddef

#define OVERCAST_TODS
dawn_overcast,morning_overcast,midday_overcast,afternoon_overcast,dusk_overcast,first_watch_overcast,midnight_overcast,second_watch_overcast,spring_overcast,summer_overcast,autumn_overcast,winter_overcast#enddef

#define SNOW_TODS
dawn_snow,morning_snow,midday_snow,afternoon_snow,dusk_snow,first_watch_snow,midnight_snow,second_watch_snow,spring_snow,summer_snow,autumn_snow,winter_snow#enddef

#define ADD_WEATHER_RAIN
    [terrain_graphics]
        map="
1
,1
1
,1"
        [tile]
            pos=1
            set_flag=rain
            no_flag=rain
        [/tile]
        [image]
            layer=2
            # flipped from mainline because in game flags fly to the left, indicating the wind blows right-to-left, but graphics have raindrops
            # going to the right
            name=noweather.png

            # [terrain_graphics] cannot be assigned or modified mid-scenario.
            # To dynamically modify weather mid-scenario, use these custom ToDs.
            [variant]
                tod={OVERCAST_TODS}
                name=overcast.png
            [/variant]
            [variant]
                tod={RAIN_TODS}
                # make the initial frame overcast.png so that disabling rain in Preferences->Display->Animate Map removes it completely instead of freezing it.
                # but we don't actually want to show it to the player normally, so give it a 0ms duration
                name=overcast.png:0,rain/rain-[1~5].png~FL(horizontal)~O(0.5):80
            [/variant]
        [/image]
    [/terrain_graphics]
    [terrain_graphics]
        [tile]
            x,y=0,0
            set_flag=rain
            no_flag=rain
        [/tile]
        [image]
            layer=2
            name=noweather.png
            [variant]
                tod={OVERCAST_TODS}
                name=overcast.png
            [/variant]
            [variant]
                tod={RAIN_TODS}
                name=overcast.png:0,rain/rain-[1~5].png~FL(horizontal)~O(0.5):80
            [/variant]
        [/image]
    [/terrain_graphics]
#enddef

#define ADD_WEATHER_SNOW
    [terrain_graphics]
        [tile]
            x,y=0,0
        [/tile]
        [image]
            layer=1
            name=noweather.png
            [variant]
                tod={SNOW_TODS}
                name=noweather.png:0,snow/whiteout.png:60000
            [/variant]
        [/image]
    [/terrain_graphics]
    [terrain_graphics]
        [tile]
            x,y=0,0
        [/tile]
        [image]
            layer=1
            name=noweather.png
            [variant]
                tod={SNOW_TODS}
                name=noweather.png:0,snow/00[01~33].png~O(0.6):80
            [/variant]
        [/image]
    [/terrain_graphics]
#enddef

#define ADD_MULTIHEX_WIND LOCATION_FILTER IPF
#arg RANDOM_DELAY
"3000,5000,7000,9000"#endarg
    [lua]
        code = <<
            local total_map_size = wesnoth.current.map.playable_width * wesnoth.current.map.playable_height
            local num_wind_items = 0.33 * total_map_size
            wml.variables["weatherWind__num_items"] = num_wind_items
        >>
    [/lua]
    [random_placement]
        [filter_location]
            {LOCATION_FILTER}
        [/filter_location]
        min_distance=1
        num_items=$weatherWind__num_items
        allow_less=yes
        variable=hex
        [command]
            {VARIABLE_OP weatherWind__delay  rand {RANDOM_DELAY}}
            {VARIABLE_OP weatherWind__speed  rand "fast,slow"}
            {VARIABLE_OP weatherWind__variant rand "1,2,3,4"} # "fast" has a 5th variant, but ignore that to simplify the WML
            [item]
                name=weather_wind
                x,y=$hex.x,$hex.y
                #also reversed from mainline
                halo=misc/blank-hex.png:$weatherWind__delay,terrain/wind/ne/$weatherWind__speed/$weatherWind__variant/00[01~31].png~FL(horizontal){IPF}:75
            [/item]
            {CLEAR_VARIABLE weatherWind__delay,weatherWind__speed,weatherWind__variant,weatherWind__num_items}
        [/command]
    [/random_placement]
#enddef

#define REMOVE_MULTIHEX_WIND
    [lua]
        code = <<
            for x = 0, wesnoth.current.map.playable_width+1 do
                for y = 0, wesnoth.current.map.playable_height+1 do
                    -- wesnoth.current.map:iter(true) is bugged in that it doesn't include x=0
                    wesnoth.interface.remove_item(x, y, "weather_wind")
                end
            end
        >>
    [/lua]
#enddef

#define PLACE_RAIN_SOUND
    [sound_source]
        id=weather_rain
        sounds="weather-rain.ogg"
        delay=0
        chance=100
        loop=-1
        x,y=1,1
        full_range=9999
        check_fogged=no
        check_shrouded=no
    [/sound_source]
#enddef

#define PLACE_THUNDER_SOUND
    [sound_source]
        id=weather_thunder
        x,y=1,2
        sounds=thunder1.wav,thunder2.wav,thunder3.wav
        delay=8000
        chance=1
        full_range=45
        loop=0
        check_fogged=no
        check_shrouded=no
    [/sound_source]
#enddef

#define PLACE_SNOW_SOUND
    [sound_source]
        id=weather_snow
        sounds="weather-snow.ogg"
        delay=0
        chance=100
        loop=-1
        x,y=1,1
        full_range=9999
        check_fogged=no
        check_shrouded=no
    [/sound_source]
#enddef

#define REMOVE_RAIN_SOUND
    [remove_sound_source]
        id=weather_rain
    [/remove_sound_source]
#enddef

#define REMOVE_THUNDER_SOUND
    [remove_sound_source]
        id=weather_thunder
    [/remove_sound_source]
#enddef

#define REMOVE_SNOW_SOUND
    [remove_sound_source]
        id=weather_snow
    [/remove_sound_source]
#enddef

#define DAWN_RAIN
    [time]
        id=dawn_rain
        name= _ "Dawn"
        image=misc/time-schedules/default/schedule-dawn.png
        red=-25
        green=-15
        blue=0
        sound=ambient/morning.ogg
    [/time]
#enddef
#define MORNING_RAIN
    [time]
        id=morning_rain
        name= _ "Morning"
        image=misc/time-schedules/default/schedule-morning.png
        lawful_bonus=25
    [/time]
#enddef
#define MIDDAY_RAIN
    [time]
        id=midday_rain
        name= _ "Midday"
        image=misc/time-schedules/schedule-midday.png
        lawful_bonus=25
    [/time]
#enddef
#define AFTERNOON_RAIN
    [time]
        id=afternoon_rain
        name= _ "Afternoon"
        image=misc/time-schedules/default/schedule-afternoon.png
        lawful_bonus=25
    [/time]
#enddef
#define DUSK_RAIN
    [time]
        id=dusk_rain
        name= _ "Dusk"
        image=misc/time-schedules/default/schedule-dusk.png
        red=10
        green=-20
        blue=-35
        sound=ambient/night.ogg
    [/time]
#enddef
#define FIRST_WATCH_RAIN
    [time]
        id=first_watch_rain
        name= _ "First Watch"
        image=misc/time-schedules/default/schedule-firstwatch.png
        lawful_bonus=-25
        red=-75
        green=-45
        blue=-13
    [/time]
#enddef
#define MIDNIGHT_RAIN
    [time]
        id=midnight_rain
        name= _ "Midnight"
        image=misc/time-schedules/schedule-midnight.png
        lawful_bonus=-25
        red=-75
        green=-45
        blue=-13
    [/time]
#enddef
#define SECOND_WATCH_RAIN
    [time]
        id=second_watch_rain
        name= _ "Second Watch"
        image=misc/time-schedules/default/schedule-secondwatch.png
        lawful_bonus=-25
        red=-75
        green=-45
        blue=-13
    [/time]
#enddef

#define DEFAULT_SCHEDULE_RAIN
    {DAWN_RAIN}
    {MORNING_RAIN}
    {AFTERNOON_RAIN}
    {DUSK_RAIN}
    {FIRST_WATCH_RAIN}
    {SECOND_WATCH_RAIN}
#enddef

#define DAWN_OVERCAST
    [time]
        id=dawn_overcast
        name= _ "Dawn"
        image=misc/time-schedules/default/schedule-dawn.png
        red=-25
        green=-15
        blue=0
        sound=ambient/morning.ogg
    [/time]
#enddef
#define MORNING_OVERCAST
    [time]
        id=morning_overcast
        name= _ "Morning"
        image=misc/time-schedules/default/schedule-morning.png
        lawful_bonus=25
    [/time]
#enddef
#define MIDDAY_OVERCAST
    [time]
        id=midday_overcast
        name= _ "Midday"
        image=misc/time-schedules/schedule-midday.png
        lawful_bonus=25
    [/time]
#enddef
#define AFTERNOON_OVERCAST
    [time]
        id=afternoon_overcast
        name= _ "Afternoon"
        image=misc/time-schedules/default/schedule-afternoon.png
        lawful_bonus=25
    [/time]
#enddef
#define DUSK_OVERCAST
    [time]
        id=dusk_overcast
        name= _ "Dusk"
        image=misc/time-schedules/default/schedule-dusk.png
        red=10
        green=-20
        blue=-35
        sound=ambient/night.ogg
    [/time]
#enddef
#define FIRST_WATCH_OVERCAST
    [time]
        id=first_watch_overcast
        name= _ "First Watch"
        image=misc/time-schedules/default/schedule-firstwatch.png
        lawful_bonus=-25
        red=-75
        green=-45
        blue=-13
    [/time]
#enddef
#define MIDNIGHT_OVERCAST
    [time]
        id=midnight_overcast
        name= _ "Midnight"
        image=misc/time-schedules/schedule-midnight.png
        lawful_bonus=-25
        red=-75
        green=-45
        blue=-13
    [/time]
#enddef
#define SECOND_WATCH_OVERCAST
    [time]
        id=second_watch_overcast
        name= _ "Second Watch"
        image=misc/time-schedules/default/schedule-secondwatch.png
        lawful_bonus=-25
        red=-75
        green=-45
        blue=-13
    [/time]
#enddef

#define DEFAULT_SCHEDULE_OVERCAST
    {DAWN_OVERCAST}
    {MORNING_OVERCAST}
    {AFTERNOON_OVERCAST}
    {DUSK_OVERCAST}
    {FIRST_WATCH_OVERCAST}
    {SECOND_WATCH_OVERCAST}
#enddef

#define DAWN_SNOW
    [time]
        id=dawn_snow
        name= _ "Dawn"
        image=misc/time-schedules/default/schedule-dawn.png
        red=-25
        green=-15
        blue=0
        sound=ambient/morning.ogg
    [/time]
#enddef
#define MORNING_SNOW
    [time]
        id=morning_snow
        name= _ "Morning"
        image=misc/time-schedules/default/schedule-morning.png
        lawful_bonus=25
    [/time]
#enddef
#define MIDDAY_SNOW
    [time]
        id=midday_snow
        name= _ "Midday"
        image=misc/time-schedules/schedule-midday.png
        lawful_bonus=25
    [/time]
#enddef
#define AFTERNOON_SNOW
    [time]
        id=afternoon_snow
        name= _ "Afternoon"
        image=misc/time-schedules/default/schedule-afternoon.png
        lawful_bonus=25
    [/time]
#enddef
#define DUSK_SNOW
    [time]
        id=dusk_snow
        name= _ "Dusk"
        image=misc/time-schedules/default/schedule-dusk.png
        red=10
        green=-20
        blue=-35
        sound=ambient/night.ogg
    [/time]
#enddef
#define FIRST_WATCH_SNOW
    [time]
        id=first_watch_snow
        name= _ "First Watch"
        image=misc/time-schedules/default/schedule-firstwatch.png
        lawful_bonus=-25
        red=-75
        green=-45
        blue=-13
    [/time]
#enddef
#define MIDNIGHT_SNOW
    [time]
        id=midnight_snow
        name= _ "Midnight"
        image=misc/time-schedules/schedule-midnight.png
        lawful_bonus=-25
        red=-75
        green=-45
        blue=-13
    [/time]
#enddef
#define SECOND_WATCH_SNOW
    [time]
        id=second_watch_snow
        name= _ "Second Watch"
        image=misc/time-schedules/default/schedule-secondwatch.png
        lawful_bonus=-25
        red=-75
        green=-45
        blue=-13
    [/time]
#enddef

#define DEFAULT_SCHEDULE_SNOW
    {DAWN_SNOW}
    {MORNING_SNOW}
    {AFTERNOON_SNOW}
    {DUSK_SNOW}
    {FIRST_WATCH_SNOW}
    {SECOND_WATCH_SNOW}
#enddef

#textdomain wesnoth-Flight_Freedom

#it's up to the scenario to utilize weather_enabled and to define an update_weather event
#not centralized here to allow for custom schedules, dynamic weather, etc.
#define WEATHER_CONTROLLER
    [event]
        name=prestart
        [set_menu_item]
            id=control_weather
            description= _ "Toggle Weather Visual Effects"
            [command]
                [if]
                    [variable]
                        name=weather_enabled
                        boolean_equals=yes
                    [/variable]
                    [then]
                        {VARIABLE weather_enabled no}
                    [/then]
                    [else]
                        {VARIABLE weather_enabled yes}
                    [/else]
                [/if]
                [fire_event]
                    name=update_weather
                [/fire_event]
            [/command]
        [/set_menu_item]
    [/event]

    [event]
        name=victory
        [clear_menu_item]
            id=control_weather
        [/clear_menu_item]
    [/event]
#enddef

#define WEATHER_EXPLANATION_MESSAGE
    [if]
        [variable]
            name=weather_effects_explained
            boolean_not_equals="yes"
        [/variable]
        [then]
            [message]
                speaker=narrator
                {NARRATOR_ICON}
                message= _ "This scenario has visual weather effects that may cause noticeable slowdown on weaker devices.

Note that you can toggle these effects at any time during the scenario by using the relevant options in the context menu."
                [option]
                    label= _ "Continue with weather"
                    [command]
                        {VARIABLE weather_enabled yes}
                    [/command]
                [/option]
                [option]
                    label= _ "Disable weather effects"
                    [command]
                        {VARIABLE weather_enabled no}
                    [/command]
                [/option]
                # wmllint: no-icon
            [/message]
            {VARIABLE weather_effects_explained "yes"}
        [/then]
    [/if]
    [message]
        speaker=narrator
        {NARRATOR_ICON}
        message= _ "You can always turn on/off some weather effects. To do that, right-click anywhere on the map and choose effects to disable/enable."
        # wmllint: no-icon
    [/message]
#enddef
