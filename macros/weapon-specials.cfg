#textdomain wesnoth-Flight_Freedom

#define WEAPON_SPECIAL_PRECISION
    # Canned definition of the Precision (targeting) ability to be included in a
    # [specials] clause.
    [chance_to_hit]
        id=precision
        name= _ "precision"
        description= _ "This attack always has a 80% chance to hit regardless of the defensive ability of the unit being attacked."
        special_note= _ "This unit has precision attacks, which always have a very high chance of hitting an opponent."
        value=80
        cumulative=no
    [/chance_to_hit]
#enddef

#define WEAPON_SPECIAL_NOCOUNTERATTACK
    [attacks]
        id=nocounter
        name= _ "no counter-attack"
        description= _ "The opponent has a 0% chance to hit when this unit is attacking. Does not work on opponents with berserker frenzy."
        special_note= _ "Some of this unit's attacks are not subject to enemy counter-attack."
        value=0
        cumulative=no
        active_on=offense
        apply_to=opponent

        [filter_opponent]
            [filter_weapon]
                [not]
                    special_type=berserk
                [/not]
            [/filter_weapon]
        [/filter_opponent]
    [/attacks]
#enddef

# wmllint: unbalanced-on
#define WEAPON_SPECIAL_ALLAROUND CHANCETOHIT
    # wmlxgettext: [attack]
    # wmlxgettext: [specials]
    [dummy]
        id=allaround
        name= _ "all around"
        active_on=offense
        description= _ "This attack, when used offensively, has a chance to hit adjacent enemy units."
        special_note= _ "Some of this unit's attacks can strike all adjacent targets."
    [/dummy]
[/specials]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring

[event]
    name=attacker hits,attacker misses
    first_time_only=no
    id=allaround_event
    [filter_attack]
        special_id=allaround
    [/filter_attack]

    [store_unit]
        [filter]
            [filter_adjacent]
                x,y=$x1,$y1
                is_enemy=yes
            [/filter_adjacent]
            [not]
                x,y=$x2,$y2
            [/not]
            [not]
                [filter_wml]
                    [status]
                        petrified=yes
                    [/status]
                [/filter_wml]
            [/not]
        [/filter]
        variable=bystander
    [/store_unit]

    {VARIABLE areadmg $weapon.damage}

    [if]
        {VARIABLE_CONDITIONAL unit.status.slowed boolean_equals yes}
        [then]
            {VARIABLE_OP areadmg divide 2}
            {VARIABLE_OP areadmg round floor}
        [/then]
    [/if]
    [foreach]
        array=bystander
        [do]
            {RANDOM 1..100}
            [if]
                {VARIABLE_CONDITIONAL random less_than_equal_to {CHANCETOHIT}}
                [then]
                    [harm_unit]
                        [filter]
                            x,y=$bystander[$i].x,$bystander[$i].y
                            [filter_side]
                                [enemy_of]
                                    side=$unit.side
                                [/enemy_of]
                            [/filter_side]
                            [not]
                                [filter_wml]
                                    [status]
                                        petrified=yes
                                    [/status]
                                [/filter_wml]
                            [/not]
                        [/filter]
                        [filter_second]
                            x,y=$x1,$y1
                        [/filter_second]
                        amount=$areadmg
                        damage_type=$weapon.type
                        alignment=$unit.alignment
                        fire_event=yes
                        animate=defender
                        delay=0
                        experience=no
                    [/harm_unit]
                    [harm_unit]
                        [filter]
                            x,y=$bystander[$i].x,$bystander[$i].y
                            [filter_side]
                                [allied_with]
                                    side=$unit.side
                                [/allied_with]
                                [or]
                                    side=$unit.side
                                [/or]
                            [/filter_side]
                            [not]
                                [filter_wml]
                                    [status]
                                        petrified=yes
                                    [/status]
                                [/filter_wml]
                            [/not]
                        [/filter]
                        [filter_second]
                            x,y=$x1,$y1
                        [/filter_second]
                        amount=$areadmg
                        damage_type=$weapon.type
                        alignment=$unit.alignment
                        fire_event=yes
                        animate=defender
                        kill=no
                        delay=0
                        experience=no
                    [/harm_unit]
                    [if]
                        [have_unit]
                            find_in=expfreeze
                            x,y=$bystander[$i].x,$bystander[$i].y
                        [/have_unit]
                        [else]
                            [store_unit]
                                [filter]
                                    x,y=$bystander[$i].x,$bystander[$i].y
                                [/filter]
                                variable=expfreeze
                                mode=append
                            [/store_unit]
                        [/else]
                    [/if]
                [/then]
            [/if]
        [/do]
    [/foreach]
[/event]

[event]
    name=attack end
    first_time_only=no
    id=exp_freeze_event

    [store_unit]
        [filter]
            id=$unit.id
        [/filter]
        variable=unitexp
    [/store_unit]
    [foreach]
        array=expfreeze
        [do]
            [if]
                [have_unit]
                    id=$expfreeze[$i].id
                [/have_unit]
                [then]
                    {VARIABLE_OP expfreeze[$i].experience add $unit.level}
                [/then]
            [/if]
            [if]
                [have_unit]
                    id=$expfreeze[$i].id
                [/have_unit]
                [then]
                    [unstore_unit]
                        variable=expfreeze[$i]
                        find_vacant=no
                    [/unstore_unit]
                [/then]
                [else]
                    {VARIABLE expkill $expfreeze[$i].level}
                    {VARIABLE_OP expkill multiply 8}
                    {IF_VAR expkill equals 0 (
                        [then]
                            {VARIABLE expkill 4}
                        [/then]
                    )}
                    [store_unit]
                        [filter]
                            id=$unitexp.id
                        [/filter]
                        variable=unitexp
                    [/store_unit]
                    {VARIABLE_OP expkill add $unitexp.experience}
                    {MODIFY_UNIT id=$unitexp.id experience $expkill}
                [/else]
            [/if]
        [/do]
    [/foreach]

    {CLEAR_VARIABLE expfreeze}
    {CLEAR_VARIABLE bystander}
    {CLEAR_VARIABLE expkill}
    {CLEAR_VARIABLE unitexp}
[/event]
[+attack]
# wmlindent: start ignoring

[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
# wmlindent: stop ignoring
#enddef
# wmllint: unbalanced-off

# Following two specials close the [specials] tag and open it later to
# insert a weapon _weight value, eliminating the need to specify it manually
# within the unit's WML file. Therefore, they are intentionally unbalanced WML

# wmllint: unbalanced-on
#define WEAPON_SPECIAL_ATTACK_ONLY
    # wmlxgettext: [specials]
    [damage]
        id=attack_only
        name= _ "attack only"
        name_inactive= _ "attack only"
        description= _ "This weapon will never be used on defense."
        description_inactive= _ "This weapon will never be used on defense."
        special_note= _ "Some of this unit's attacks are not available except on offense."
        multiply=0
        active_on=defense
    [/damage]
# wmlindent: start ignoring
    [/specials]
    defense_weight=0
    [+specials]
    # wmlxgettext: [/specials]
# wmlindent: stop ignoring
#enddef

#define WEAPON_SPECIAL_DEFEND_ONLY
    # wmlxgettext: [specials]
    [damage]
        id=attack_only
        name= _ "defend only"
        name_inactive= _ "defend only"
        description= _ "This weapon will only be available for defense."
        description_inactive= _ "This weapon will only be available for defense."
        special_note= _ "Some of this unit's attacks are not available except on defense."
        multiply=0
        active_on=offense
    [/damage]
# wmlindent: start ignoring
    [/specials]
    attack_weight=0
    [+specials]
    # wmlxgettext: [/specials]
# wmlindent: stop ignoring
#enddef
# wmllint: unbalanced-off
