#textdomain wesnoth-Flight_Freedom

#define MAGI PLAYER ENEMIES
    [lua]
        code = <<
            functional = wesnoth.require("functional")

            function wesnoth.custom_synced_commands.mage_fire(cfg)
                local x1 = cfg.x1
                local y1 = cfg.y1
                local x2 = cfg.x2
                local y2 = cfg.y2
                local damage = cfg.damage
                local drained_type = cfg.drained_type
                local magi_unit = wesnoth.units.get(x1, y1)
                local target_unit = wesnoth.units.get(x2, y2)
                if x2 > x1 then
                    magi_unit.facing = "se"
                else
                    magi_unit.facing = "sw"
                end
                wml.variables["lrfireball_attack"] = true
                local distance = wesnoth.map.distance_between({x1, y1}, {x2, y2})
                local frames = distance * 4
                attack_animator = wesnoth.units.create_animator()
                attack_animator:add(magi_unit, "lrfireball_attack", "hit")
                attack_animator:run()
                wesnoth.wml_actions.animate_path({
                    hex_x=string.format("%i,%i", x1, x2),
                    hex_y=string.format("%i,%i", y1, y2),
                    image="projectiles/fireball-magus.png",
                    frames=frames,
                    frame_length=10
                })
                wesnoth.interface.delay(300, true)
                wesnoth.audio.play("flame-big-miss.ogg")
                for i=1,16,1 do
                    local frame_path = string.format("projectiles/fireball-impact-%i.png", i)
                    wesnoth.interface.add_item_halo(x2, y2, frame_path)
                    wesnoth.interface.delay(60, true)
                    wesnoth.interface.remove_item(x2, y2, frame_path)
                end
                wesnoth.wml_actions.harm_unit({
                    wml.tag.filter{x=x2,y=y2},
                    wml.tag.filter_second{x=x1,y=y1},
                    amount=damage,
                    damage_type="fire",
                    kill=true,
                    fire_event=true,
                    animate="defender",
                    wml.tag.primary_attack{range="ranged"},
                    experience=true
                })
                -- handled in post_advance event
                if magi_unit.variables.just_leveled ~= nil and magi_unit.variables.just_leveled then
                    magi_unit.variables.just_leveled = false
                else
                    local magi_energy = magi_unit.variables.energy
                    magi_energy = magi_energy - 1
                    magi_unit.variables.energy = magi_energy
                    if magi_energy == 0 then
                        magi_unit:transform(drained_type)
                        wesnoth.wml_actions.message({
                            x=x1,
                            y=y1,
                            message=_"My energies are drained, I need rest.",
                            side_for=wesnoth.current.side
                        })
                        wesnoth.wml_actions.remove_unit_overlay({
                            x=x1,
                            y=y1,
                            image="misc/mage-charged.png"
                        })
                        wesnoth.wml_actions.unit_overlay({
                            x=x1,
                            y=y1,
                            image="misc/mage-drained.png",
                            duration="scenario"
                        })
                    end
                end
                magi_unit.moves = 0
                magi_unit.resting = false
                magi_unit.attacks_left = 0
                wml.variables["lrfireball_attack"] = false
            end
        >>
    [/lua]

    [event]
        name=mage_attack
        first_time_only=no
        [lua]
            code = <<
                local magi_x = wml.variables["temp_mage_x"]
                local magi_y = wml.variables["temp_mage_y"]
                local magi_range = wml.variables["temp_range"]
                local magi_damage = wml.variables["temp_damage"]
                local magi_drained_type = wml.variables["temp_drained_type"]
                local enemy_sides = functional.map_array(stringx.split(wml.variables["temp_target_sides"], ","), tonumber)

                local potential_targets = wesnoth.units.find_on_map({
                    side=wml.variables["temp_target_sides"],
                    wml.tag.filter_location{
                        x=magi_x,
                        y=magi_y,
                        radius=magi_range
                    },
                    wml.tag.filter_vision{
                        visible=true,
                        respect_fog=true,
                        side=wesnoth.current.side
                    }
                })
                for i,u in ipairs(potential_targets) do
                    wesnoth.interface.add_item_image(u.x, u.y, "halo/highlight-hex.png")
                end
                wesnoth.wml_actions.redraw({})

                local function is_valid_target(x, y)
                    local unit = wesnoth.units.get(x, y)
                    if not unit then return false end
                    local distance = wesnoth.map.distance_between({magi_x, magi_y}, {x, y})
                    if distance > magi_range then return false end
                    for _,v in pairs(enemy_sides) do
                        if v == unit.side then return true end
                    end
                    return false
                end

                local function remove_target_highlights()
                    for i,u in ipairs(potential_targets) do
                        wesnoth.interface.remove_item(u.x, u.y, "halo/highlight-hex.png")
                    end
                    wesnoth.wml_actions.redraw({})
                end

                local function mage_fire(x, y)
                    remove_target_highlights()
                    wesnoth.sync.invoke_command("mage_fire",{
                        x1=magi_x,
                        y1=magi_y,
                        x2=x,
                        y2=y,
                        damage=magi_damage,
                        drained_type=magi_drained_type
                    })
                end

                select_tile(_"Select target... (right-click to cancel)", is_valid_target, mage_fire, remove_target_highlights)
            >>
        [/lua]
    [/event]

    #variables used to save labor in case of future rebalancing
    [event]
        id=mage_constants_init
        name=prestart
        [set_variable]
            name=khigh_magus_range
            value=4
        [/set_variable]
        [set_variable]
            name=khigh_magus_damage
            value=30
        [/set_variable]
        #set to -1 for infinite charges
        [set_variable]
            name=khigh_magus_charges
            value=3
        [/set_variable]
        [set_variable]
            name=kmagus_range
            value=3
        [/set_variable]
        [set_variable]
            name=kmagus_damage
            value=20
        [/set_variable]
        #set to -1 for infinite charges
        [set_variable]
            name=kmagus_charges
            value=3
        [/set_variable]
    [/event]

    [event]
        id=hmagi_recall_list_init
        name=prestart
        [if]
            [have_unit]
                type=Drake High Magus,Drake High Magus Drained
                side={PLAYER}
                search_recall_list=yes
            [/have_unit]
            [then]
                [store_unit]
                    [filter]
                        type=Drake High Magus,Drake High Magus Drained
                        side={PLAYER}
                    [/filter]
                    variable=tempstore
                [/store_unit]
                [foreach]
                    array=tempstore
                    variable=this_item
                    readonly=no
                    [do]
                        #shouldn't be necessary to initialize variable, but here just in case
                        {VARIABLE this_item.variables.energy 0}
                        {VARIABLE_OP this_item.variables.energy to_variable khigh_magus_charges}
                        [if]
                            [variable]
                                name=this_item.type
                                equals="Drake High Magus Drained"
                            [/variable]
                            [then]
                                {VARIABLE this_item.type (Drake High Magus)}
                            [/then]
                        [/if]
                        [unstore_unit]
                            variable=this_item
                        [/unstore_unit]
                    [/do]
                [/foreach]
                {CLEAR_VARIABLE tempstore}
            [/then]
        [/if]
    [/event]

    [event]
        id=magi_recall_list_init
        name=prestart
        [if]
            [have_unit]
                type=Drake Magus,Drake Magus Drained
                side={PLAYER}
                search_recall_list=yes
            [/have_unit]
            [then]
                [store_unit]
                    [filter]
                        type=Drake Magus,Drake Magus Drained
                        side={PLAYER}
                    [/filter]
                    variable=tempstore
                [/store_unit]
                [foreach]
                    array=tempstore
                    variable=this_item
                    readonly=no
                    [do]
                        #shouldn't be necessary to initialize variable, but here just in case
                        {VARIABLE this_item.variables.energy 0}
                        {VARIABLE_OP this_item.variables.energy to_variable kmagus_charges}
                        [if]
                            [variable]
                                name=this_item.type
                                equals="Drake Magus Drained"
                            [/variable]
                            [then]
                                {VARIABLE this_item.type (Drake Magus)}
                            [/then]
                        [/if]
                        [unstore_unit]
                            variable=this_item
                        [/unstore_unit]
                    [/do]
                [/foreach]
                {CLEAR_VARIABLE tempstore}
            [/then]
        [/if]
    [/event]

    [event]
        #not prestart or start to keep players from invoking it before the initial dialogue is finished
        id=magi_lesser_fireball
        name=turn 1
        [set_menu_item]
            id=lesser_fireball
            description= _ "Lesser Fireball"
            image=buttons/fireball.png
            synced=no
            #only allows its use during the player's turn
            [show_if]
                [variable]
                    name=side_number
                    numerical_equals={PLAYER}
                [/variable]
                [and]
                    [have_unit]
                        side={ENEMIES}
                        [filter_location]
                            x,y=$x1,$y1
                            radius=$kmagus_range
                        [/filter_location]
                        [filter_vision]
                            visible=yes
                            respect_fog=yes
                            side={PLAYER}
                        [/filter_vision]
                    [/have_unit]
                [/and]
            [/show_if]
            [filter_location]
                [filter]
                    type=Drake Magus
                    side={PLAYER}
                    [filter_wml]
                        attacks_left=1
                    [/filter_wml]
                [/filter]
            [/filter_location]
            [command]
                {VARIABLE temp_target_sides "{ENEMIES}"}
                {VARIABLE temp_range $kmagus_range}
                {VARIABLE temp_damage $kmagus_damage}
                {VARIABLE temp_mage_x $x1}
                {VARIABLE temp_mage_y $y1}
                {VARIABLE temp_drained_type "Drake Magus Drained"}
                [fire_event]
                    name=mage_attack
                [/fire_event]
                {CLEAR_VARIABLE temp_target_sides}
                {CLEAR_VARIABLE temp_range}
                {CLEAR_VARIABLE temp_damage}
                {CLEAR_VARIABLE temp_mage_x}
                {CLEAR_VARIABLE temp_mage_y}
                {CLEAR_VARIABLE temp_drained_type}
            [/command]
        [/set_menu_item]
    [/event]

    [event]
        #not prestart to keep players from invoking it before the initial dialogue is finished
        id=hmagi_fireball
        name=turn 1
        [set_menu_item]
            id=fireball
            description= _ "Fireball"
            image=buttons/fireball.png
            synced=no
            #only allows its use during the player's turn
            [show_if]
                [variable]
                    name=side_number
                    numerical_equals={PLAYER}
                [/variable]
                [and]
                    [have_unit]
                        side={ENEMIES}
                        [filter_location]
                            x,y=$x1,$y1
                            radius=$khigh_magus_range
                        [/filter_location]
                        [filter_vision]
                            visible=yes
                            respect_fog=yes
                            side={PLAYER}
                        [/filter_vision]
                    [/have_unit]
                [/and]
            [/show_if]
            [filter_location]
                [filter]
                    type=Drake High Magus
                    side={PLAYER}
                    [filter_wml]
                        attacks_left=1
                    [/filter_wml]
                [/filter]
            [/filter_location]
            [command]
                {VARIABLE temp_target_sides "{ENEMIES}"}
                {VARIABLE temp_range $khigh_magus_range}
                {VARIABLE temp_damage $khigh_magus_damage}
                {VARIABLE temp_mage_x $x1}
                {VARIABLE temp_mage_y $y1}
                {VARIABLE temp_drained_type "Drake High Magus Drained"}
                [fire_event]
                    name=mage_attack
                [/fire_event]
                {CLEAR_VARIABLE temp_target_sides}
                {CLEAR_VARIABLE temp_range}
                {CLEAR_VARIABLE temp_damage}
                {CLEAR_VARIABLE temp_mage_x}
                {CLEAR_VARIABLE temp_mage_y}
                {CLEAR_VARIABLE temp_drained_type}
            [/command]
        [/set_menu_item]
    [/event]

    [event]
        id=magi_charges
        name=prestart
        [set_menu_item]
            id=check_magus_charges
            description= _ "Charges..."
            [show_if]
                [have_unit]
                    side={PLAYER}
                    x,y=$x1,$y1
                    type=Drake Magus,Drake Magus Drained,Drake High Magus,Drake High Magus Drained
                [/have_unit]
            [/show_if]
            [command]
                [store_unit]
                    [filter]
                        x,y=$x1,$y1
                    [/filter]
                    variable=tempstore
                [/store_unit]
                [message]
                    speaker=narrator
                    {NARRATOR_ICON}
                    side_for={PLAYER}
                    message= _ "Charges: $tempstore.variables.energy"
                    # wmllint: no-icon
                [/message]
                {CLEAR_VARIABLE tempstore}
                [allow_undo]
                [/allow_undo]
            [/command]
        [/set_menu_item]
    [/event]

#ifdef __UNUSED__
    [event]
        name=attack_end
        first_time_only=no
        [filter]
            type=Drake High Magus,Drake Magus
            side={PLAYER}
        [/filter]
        [if]
            [have_unit]
                x,y=$x1,$y1
            [/have_unit]
            [then]
                [store_unit]
                    [filter]
                        x,y=$x1,$y1
                    [/filter]
                    variable=tempstore
                [/store_unit]
                {VARIABLE tempstore.moves 0}
                {VARIABLE tempstore.resting no}
                {VARIABLE tempstore.attacks_left 0}
                [unstore_unit]
                    variable=tempstore
                [/unstore_unit]
                [redraw]
                [/redraw]
                {CLEAR_VARIABLE tempstore}
            [/then]
        [/if]
    [/event]
#endif

    [event]
        id=hmagi_recruit_init
        name=recruit
        first_time_only=no
        [filter]
            type=Drake High Magus
            side={PLAYER}
        [/filter]
        [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]
            variable=tempstore_magus
        [/store_unit]
        #shouldn't be necessary to initialize variable, but here just in case
        {VARIABLE tempstore_magus.variables.energy 0}
        {VARIABLE_OP tempstore_magus.variables.energy to_variable khigh_magus_charges}
        [unstore_unit]
            variable=tempstore_magus
        [/unstore_unit]
        [unit_overlay]
            x,y=$x1,$y1
            image=misc/mage-charged.png
            duration=scenario
        [/unit_overlay]
        {CLEAR_VARIABLE tempstore_magus}
    [/event]

    [event]
        id=magi_recruit_init
        name=recruit
        first_time_only=no
        [filter]
            type=Drake Magus
            side={PLAYER}
        [/filter]
        [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]
            variable=tempstore_magus
        [/store_unit]
        #shouldn't be necessary to initialize variable, but here just in case
        {VARIABLE tempstore_magus.variables.energy 0}
        {VARIABLE_OP tempstore_magus.variables.energy to_variable kmagus_charges}
        [unstore_unit]
            variable=tempstore_magus
        [/unstore_unit]
        [unit_overlay]
            x,y=$x1,$y1
            image=misc/mage-charged.png
            duration=scenario
        [/unit_overlay]
        {CLEAR_VARIABLE tempstore_magus}
    [/event]

    [event]
        id=hmagi_magi_recall_overlay
        [unit_overlay]
            x,y=$x1,$y1
            image=misc/mage-charged.png
            duration=scenario
        [/unit_overlay]
    [/event]

    [event]
        id=hmagi_post_advance
        name=post advance
        first_time_only=no
        [filter]
            #this needs to be the type the unit advances INTO, not the type it was
            type=Drake High Magus,Drake High Magus Drained
            side={PLAYER}
        [/filter]
        [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]
            variable=tempstore_magus
        [/store_unit]
        #shouldn't be necessary to initialize variable, but here just in case
        {VARIABLE tempstore_magus.variables.energy 0}
        {VARIABLE_OP tempstore_magus.variables.energy to_variable khigh_magus_charges}
        {VARIABLE tempstore_magus.type (Drake High Magus)}
        [if]
            [variable]
                name=lr_fireball
                numerical_equals=1
            [/variable]
            [and]
                #if this magus was attacked by another magus, we don't want it getting a free energy unit when it attacks
                [variable]
                    name=tempstore_magus.side
                    numerical_equals=$side
                [/variable]
            [/and]
            [then]
                #necessary to flag it so the fireball event doesn't take away a unit of energy
                {VARIABLE tempstore_magus.variables.just_leveled yes}
            [/then]
        [/if]
        [unstore_unit]
            variable=tempstore_magus
        [/unstore_unit]
        [remove_unit_overlay]
            x,y=$x1,$y1
            image=misc/mage-charged.png
        [/remove_unit_overlay]
        [remove_unit_overlay]
            x,y=$x1,$y1
            image=misc/mage-drained.png
        [/remove_unit_overlay]
        [unit_overlay]
            x,y=$x1,$y1
            image=misc/mage-charged.png
            duration=scenario
        [/unit_overlay]
        {CLEAR_VARIABLE tempstore_magus}
    [/event]

    #clean up our menu_items and variables
    [event]
        id=magi_cleanup
        name=victory
        [clear_menu_item]
            id=lesser_fireball,fireball,check_magus_charges
        [/clear_menu_item]
        {CLEAR_VARIABLE lrfireball_attack}
        {CLEAR_VARIABLE khigh_magus_range}
        {CLEAR_VARIABLE khigh_magus_damage}
        {CLEAR_VARIABLE khigh_magus_charges}
        {CLEAR_VARIABLE kmagus_range}
        {CLEAR_VARIABLE kmagus_damage}
        {CLEAR_VARIABLE kmagus_charges}
    [/event]

#enddef

#to be used like this:
# {HMAGUS 20 14 1 (
# random_traits=yes
# generate_name=yes
# )}

#define HMAGUS X Y SIDE EXTRA
    {VARIABLE must_move_unit no}
    [if]
        [have_unit]
            x,y={X},{Y}
        [/have_unit]
        [then]
            [store_unit]
                [filter]
                    x={X}
                    y={Y}
                [/filter]
                kill=yes
                variable=tempstore
            [/store_unit]
            {VARIABLE must_move_unit yes}
        [/then]
    [/if]
    [unit]
        x={X}
        y={Y}
        side={SIDE}
        type=Drake High Magus
        [variables]
            energy=$khigh_magus_charges
        [/variables]
        {EXTRA}
    [/unit]
    [unit_overlay]
        x={X}
        y={Y}
        image=misc/mage-charged.png
        duration=scenario
    [/unit_overlay]
    [store_unit]
        [filter]
            x={X}
            y={Y}
        [/filter]
        variable=tempstore_magus
        kill=yes
    [/store_unit]
    [if]
        [variable]
            name=must_move_unit
            boolean_equals=yes
        [/variable]
        [then]
            [unstore_unit]
                variable=tempstore
            [/unstore_unit]
        [/then]
    [/if]
    [unstore_unit]
        variable=tempstore_magus
        find_vacant=yes
    [/unstore_unit]
    {CLEAR_VARIABLE tempstore_magus}
    {CLEAR_VARIABLE tempstore}
    {CLEAR_VARIABLE must_move_unit}
    [redraw]
    [/redraw]
#enddef

#define MAGUS X Y SIDE EXTRA
    {VARIABLE must_move_unit no}
    [if]
        [have_unit]
            x,y={X},{Y}
        [/have_unit]
        [then]
            [store_unit]
                [filter]
                    x={X}
                    y={Y}
                [/filter]
                kill=yes
                variable=tempstore
            [/store_unit]
            {VARIABLE must_move_unit yes}
        [/then]
    [/if]
    [unit]
        x={X}
        y={Y}
        side={SIDE}
        type=Drake Magus
        [variables]
            energy=$kmagus_charges
        [/variables]
        {EXTRA}
    [/unit]
    [unit_overlay]
        x={X}
        y={Y}
        image=misc/mage-charged.png
        duration=scenario
    [/unit_overlay]
    [store_unit]
        [filter]
            x={X}
            y={Y}
        [/filter]
        variable=tempstore_magus
        kill=yes
    [/store_unit]
    [if]
        [variable]
            name=must_move_unit
            boolean_equals=yes
        [/variable]
        [then]
            [unstore_unit]
                variable=tempstore
            [/unstore_unit]
        [/then]
    [/if]
    [unstore_unit]
        variable=tempstore_magus
        find_vacant=yes
    [/unstore_unit]
    {CLEAR_VARIABLE tempstore_magus}
    {CLEAR_VARIABLE tempstore}
    {CLEAR_VARIABLE must_move_unit}
    [redraw]
    [/redraw]
#enddef

#define MAGI_EXPLANATION_MESSAGE
    [if]
        [variable]
            name=magi_explained
            boolean_not_equals=yes
        [/variable]
        [then]
            [message]
                speaker=narrator
                {NARRATOR_ICON}
                message= _ "<span color='green'>Drake High Magi can launch Fireballs (damage: <b>$khigh_magus_damage fire</b>) within a four-hex radius. They are limited to three fireballs per scenario level per Magus. A green square signifies that the Magus has energy left, and a red square signifies that the Magus' energy is depleted.</span>"
                # wmllint: no-icon
            [/message]
            [message]
                speaker=narrator
                {NARRATOR_ICON}
                message= _ "<span color='green'>Similarly, Drake Magi can launch Lesser Fireballs (damage: <b>$kmagus_damage fire</b>) within a three-hex radius. They are limited to three fireballs per scenario level per magus.</span>"
                # wmllint: no-icon
            [/message]
            [message]
                speaker=narrator
                {NARRATOR_ICON}
                message= _ "<span color='green'>Fireballs are invoked by right-clicking on a Magus and selecting a target. You can check the number of charges a Magus has by right-clicking on it and selecting “Charges...”</span>"
                # wmllint: no-icon
            [/message]
            {VARIABLE magi_explained "yes"}
        [/then]
    [/if]
#enddef
